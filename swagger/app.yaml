openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample API
  description: >-
    A sample API that uses a sample-site as an example to demonstrate features in
    the OpenAPI 3.0 specification
servers:
  - url: 'http://localhost:8003'
paths:
  /users:
    get:
      description: >
        Returns all users
      operationId: findUsers
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/twitter_signin_url:
    get:
      description: twitter_signin_url
      operationId: signinUrRL
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: "https://api.twitter.com/oauth/authorize?oauth_token=xxxxxxx"
                  oauth_token:
                    type: string
                    example: "xxxxxxxxxx"
                  oauth_secret:
                    type: string
                    example: "zzzzzzzzzzz"

  /api/users/twitter_signup_url:
    get:
      description: twitter_signup_url
      operationId: signupUrRL
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: "https://api.twitter.com/oauth/authorize?oauth_token=xxxxxxx"
                  oauth_token:
                    type: string
                    example: "xxxxxxxxxx"
                  oauth_secret:
                    type: string
                    example: "zzzzzzzzzzz"

  /api/users/signup:
    post:
      description: signup
      operationId: signup
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  oauth_token:
                    type: string
                    example: "hogehogehoeg"
                  oauth_secret:
                    type: string
                    example: "aaaaaaa.aaaaaaaaaaa"
                  oauth_verifier:
                    type: string
                    example: "aaaaaaa.aaaaaaaaaaa"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'

  /api/users/signin:
    post:
      description: signin
      operationId: signin
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  oauth_token:
                    type: string
                    example: "hogehogehoeg"
                  oauth_secret:
                    type: string
                    example: "aaaaaaa.aaaaaaaaaaa"
                  oauth_verifier:
                    type: string
                    example: "aaaaaaa.aaaaaaaaaaa"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'

components:
  schemas:
    User:
      type: "object"
      required:
        - "name"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 100
        username:
          type: "string"
          example: "taro"
        display_name:
          type: "string"
          description: "displayname"
          example: "Taroâ˜…"
        icon_url:
          type: "string"
          description: "icon url"
          example: "http://example.com/icon.png"
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"